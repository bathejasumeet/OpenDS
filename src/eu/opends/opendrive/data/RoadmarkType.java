//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.16 at 11:33:23 AM CET 
//


package eu.opends.opendrive.data;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for roadmarkType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="roadmarkType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="solid"/>
 *     &lt;enumeration value="broken"/>
 *     &lt;enumeration value="solid solid"/>
 *     &lt;enumeration value="solid broken"/>
 *     &lt;enumeration value="broken solid"/>
 *     &lt;enumeration value="broken broken"/>
 *     &lt;enumeration value="botts dots"/>
 *     &lt;enumeration value="grass"/>
 *     &lt;enumeration value="curb"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "roadmarkType")
@XmlEnum
public enum RoadmarkType {

    @XmlEnumValue("none")
    NONE("none"),
    @XmlEnumValue("solid")
    SOLID("solid"),
    @XmlEnumValue("broken")
    BROKEN("broken"),
    @XmlEnumValue("solid solid")
    SOLID_SOLID("solid solid"),
    @XmlEnumValue("solid broken")
    SOLID_BROKEN("solid broken"),
    @XmlEnumValue("broken solid")
    BROKEN_SOLID("broken solid"),
    @XmlEnumValue("broken broken")
    BROKEN_BROKEN("broken broken"),
    @XmlEnumValue("botts dots")
    BOTTS_DOTS("botts dots"),
    @XmlEnumValue("grass")
    GRASS("grass"),
    @XmlEnumValue("curb")
    CURB("curb");
    private final String value;

    RoadmarkType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RoadmarkType fromValue(String v) {
        for (RoadmarkType c: RoadmarkType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
